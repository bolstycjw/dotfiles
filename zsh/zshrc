# -- Dotfiles Directory --------------------------------------------------------
export XDG_CONFIG_HOME="$HOME/.config"
export DOTFILES="$HOME/dotfiles"

# Helper scripts
source "$DOTFILES/scripts/helpers/functions.sh"

# -- Zsh -----------------------------------------------------------------------
ZSH="$HOME/.oh-my-zsh"
ZSH_CUSTOM="$DOTFILES/zsh/custom"
fpath=($ZSH_CUSTOM $fpath)

# -- Theme ---------------------------------------------------------------------
export NVIM_TUI_ENABLE_TRUE_COLOR=1
SPACESHIP_NODE_SYMBOL="\uf898 "
SPACESHIP_RUBY_SYMBOL="\ue739 "
SPACESHIP_DOCKER_SYMBOL="\uf308 "
SPACESHIP_PACKAGE_SYMBOL="\uf8d2 "
ZSH_THEME="pure"

# -- ZSH Plugins ---------------------------------------------------------------
plugins=(bower docker docker-compose gem git golang history npm pip pj rails rake ruby tmux tmuxinator vi-mode yarn z zsh-autosuggestions zsh-syntax-highlighting)

fpath=($DOTFILES/zsh/custom/completion $fpath)

# -- Oh My Zsh -----------------------------------------------------------------
source $ZSH/oh-my-zsh.sh

# -- Named Directories ---------------------------------------------------------
unsetopt auto_name_dirs

# -- Completion Config ---------------------------------------------------------
zstyle ':completion:*:*:vim:*:*files' ignored-patterns '*.class'

# -- Command History -----------------------------------------------------------
export HISTSIZE=500
export SAVEHIST=500

# -- Options -------------------------------------------------------------------
unsetopt correct_all
unsetopt correct

# -- Variables -----------------------------------------------------------------
export EDITOR=`which nvim`

# -- Aliases -------------------------------------------------------------------
if [[ -f "$DOTFILES/aliases" ]]; then
  source $DOTFILES/aliases
fi

if [[ -f "$HOME/.aliases" ]]; then
    source $HOME/.aliases
fi

if exists "hub"; then alias git=hub; fi

codeclimate() {
  docker run --interactive --tty --rm --env CODE_PATH="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate "$@"
}

export PATH="$PATH:/opt/vagrant/bin"
export PATH="/usr/local/sbin:$HOME/bin:$PATH"

# -- Functions -----------------------------------------------------------------

# Extract archive based on file type
# Taken from http://justinlilly.com/dotfiles/zsh.html
extract () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)        tar xjf $1        ;;
            *.tar.gz)         tar xzf $1        ;;
            *.bz2)            bunzip2 $1        ;;
            *.rar)            unrar x $1        ;;
            *.gz)             gunzip $1         ;;
            *.tar)            tar xf $1         ;;
            *.tbz2)           tar xjf $1        ;;
            *.tgz)            tar xzf $1        ;;
            *.zip)            unzip $1          ;;
            *.Z)              uncompress $1     ;;
            *)                echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# -- Git -----------------------------------------------------------------------
zstyle ':completion:*:*:hub:*' user-commands ${${(M)${(k)commands}:#git-*}/git-/}
_git-delete-tag() { compadd "$@" $(git tag) }

# -- Tmux ----------------------------------------------------------------------
export DISABLE_AUTO_TITLE="true"
alias tmux="tmux -2"

# -- TheFuck -------------------------------------------------------------------
#    https://github.com/nvbn/thefuck
alias fuck='$(thefuck $(fc -ln -1))'

# -- Add DOTFILES bin to PATH --------------------------------------------------
export PATH="$PATH:$DOTFILES/bin"

# -- Add golang bin to PATH ----------------------------------------------------
export GOPATH="$HOME/sdk/go1.16.5"
export PATH="$PATH:$GOPATH/bin"

# -- Add rust to PATH ----------------------------------------------------------
export RUSTPATH="$HOME/.cargo"
export PATH="$PATH:$RUSTPATH/bin"

# -- Xiki ----------------------------------------------------------------------
if [[ -f "$HOME/.xsh" ]]; then
  source $HOME/.xsh
fi

# -- fzf -----------------------------------------------------------------------
if [ -f ~/.fzf.zsh ]; then
  source ~/.fzf.zsh
  export FZF_TMUX=1
  export FZF_DEFAULT_OPTS='--color 16,info:6,hl:13,hl+:13'
  export FZF_DEFAULT_COMMAND="command rg --files-with-matches --no-messages -F ''"
  export FZF_CTRL_T_COMMAND="command rg --files-with-matches --no-messages --hidden -F '' | grep -v .git/"
fi

# -- Yarn ----------------------------------------------------------------------
# Make the shell aware of global packages installed by Yarn
local yarn_global_modules="$XDG_CONFIG_HOME/yarn/global/node_modules"
if [[ -d "$yarn_global_modules/.bin" ]]; then
  export PATH="$PATH:$yarn_global_modules/.bin"
fi

# -- Locale Settings -----------------------------------------------------------
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# -- ASDF Settings -------------------------------------------------------------
export ASDF_DIR="$(brew --prefix asdf)/libexec"
source $ASDF_DIR/asdf.sh

# -- Custom Settings -----------------------------------------------------------
# autosuggest accept
bindkey '^ ' autosuggest-accept

export PATH="$HOME/.local/bin:$PATH"
export PATH="./bin:$PATH"
export TERM=xterm-256color
export LIBRARY_PATH="$LIBRARY_PATH:/usr/local/lib"
export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
export JAVA_HOME=$(/usr/libexec/java_home)
export PATH=$JAVA_HOME/bin:$PATH
export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
